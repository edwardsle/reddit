{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Edward\\\\Documents\\\\GitHub\\\\reddit\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Edward\\\\Documents\\\\GitHub\\\\reddit\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT } from '../actionTypes';\n\nvar registerUserAction = function registerUserAction(name, email, password) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var config, _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: USER_REGISTER_REQUEST\n              });\n              config = {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context.next = 5;\n              return axios.post(\"\".concat(process.env.REACT_APP_API_DOMAIN, \"/api/users/register\"), {\n                name,\n                email,\n                password\n              }, config);\n\n            case 5:\n              _yield$axios$post = _context.sent;\n              data = _yield$axios$post.data;\n              dispatch({\n                type: USER_REGISTER_SUCCESS,\n                payload: data\n              }); // Set the user to be logged\n\n              localStorage.setItem('userAuthData', JSON.stringify(data));\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: USER_REGISTER_FAIL,\n                payload: _context.t0.response && _context.t0.response.data.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}; // login action\n\n\nvar loginUserAction = function loginUserAction(email, password) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var config, _yield$axios$post2, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              dispatch({\n                type: USER_LOGIN_REQUEST\n              });\n              config = {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context2.next = 5;\n              return axios.post(\"\".concat(process.env.REACT_APP_API_DOMAIN, \"/api/users/login\"), {\n                email,\n                password\n              }, config);\n\n            case 5:\n              _yield$axios$post2 = _context2.sent;\n              data = _yield$axios$post2.data;\n              dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data\n              }); // Set the user to be logged\n\n              localStorage.setItem('userAuthData', JSON.stringify(data));\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch({\n                type: USER_LOGIN_FAIL,\n                payload: _context2.t0.response && _context2.t0.response.data.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 11]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\n\nvar logoutUserAction = function logoutUserAction() {\n  dispatch({\n    type: USER_LOGOUT\n  });\n  localStorage.clear();\n};\n\nexport { registerUserAction, loginUserAction, logoutUserAction };","map":{"version":3,"sources":["C:/Users/Edward/Documents/GitHub/reddit/src/redux/actions/users/usersActions.js"],"names":["axios","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","registerUserAction","name","email","password","dispatch","type","config","headers","post","process","env","REACT_APP_API_DOMAIN","data","payload","localStorage","setItem","JSON","stringify","response","message","loginUserAction","logoutUserAction","clear"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT\r\n} from '../actionTypes';\r\n\r\nconst registerUserAction = (name, email, password) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch ({\r\n                type: USER_REGISTER_REQUEST            \r\n            });\r\n    \r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n            \r\n            const { data } = await axios.post(\r\n                `${process.env.REACT_APP_API_DOMAIN}/api/users/register`,\r\n                {\r\n                    name,\r\n                    email,\r\n                    password\r\n                }, \r\n                config\r\n            );\r\n    \r\n            dispatch({\r\n                type: USER_REGISTER_SUCCESS,\r\n                payload: data\r\n            });\r\n\r\n            // Set the user to be logged\r\n            localStorage.setItem('userAuthData', JSON.stringify(data));\r\n        } catch (error) {\r\n            dispatch({\r\n                type: USER_REGISTER_FAIL,\r\n                payload: error.response && error.response.data.message\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\n// login action\r\nconst loginUserAction = (email, password) => {\r\n    return async dispatch =>{\r\n        try {\r\n            dispatch({\r\n                type: USER_LOGIN_REQUEST\r\n            });\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n\r\n            const { data } = await axios.post(\r\n                `${process.env.REACT_APP_API_DOMAIN}/api/users/login`,\r\n                {\r\n                    email,\r\n                    password\r\n                }, \r\n                config\r\n            );\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: data\r\n            });\r\n            // Set the user to be logged\r\n            localStorage.setItem('userAuthData', JSON.stringify(data));\r\n        } catch (error) {\r\n            dispatch({\r\n                type: USER_LOGIN_FAIL,\r\n                payload: error.response && error.response.data.message\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nconst logoutUserAction = () => {\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    });\r\n    localStorage.clear();\r\n} \r\n\r\n\r\nexport { registerUserAction, loginUserAction, logoutUserAction };\r\n"]},"metadata":{},"sourceType":"module"}