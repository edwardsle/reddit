{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Edward\\\\Documents\\\\GitHub\\\\reddit\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Edward\\\\Documents\\\\GitHub\\\\reddit\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from '../actionTypes';\n\nvar registerUserAction = function registerUserAction(name, email, password) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var config, _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: USER_REGISTER_REQUEST\n              });\n              config = {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context.next = 5;\n              return axios.post('api/users/register', {\n                name,\n                email,\n                password\n              }, config);\n\n            case 5:\n              _yield$axios$post = _context.sent;\n              data = _yield$axios$post.data;\n              dispatch({\n                type: USER_REGISTER_SUCCESS,\n                payload: data\n              }); // Set the user to be logged\n\n              localStorage.setItem('userAuthData', JSON.stringify(data));\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: USER_REGISTER_FAIL,\n                payload: _context.t0.response && _context.t0.response.data.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexport { registerUserAction };","map":{"version":3,"sources":["C:/Users/Edward/Documents/GitHub/reddit/src/redux/actions/users/usersActions.js"],"names":["axios","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","registerUserAction","name","email","password","dispatch","type","config","headers","post","data","payload","localStorage","setItem","JSON","stringify","response","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,kBAHF,QAIO,gBAJP;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAA2B;AAClD;AAAA,wEAAO,iBAAMC,QAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAECA,cAAAA,QAAQ,CAAE;AACNC,gBAAAA,IAAI,EAAER;AADA,eAAF,CAAR;AAIMS,cAAAA,MANP,GAMgB;AACXC,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX;AADE,eANhB;AAAA;AAAA,qBAYwBX,KAAK,CAACY,IAAN,CACnB,oBADmB,EAEnB;AACIP,gBAAAA,IADJ;AAEIC,gBAAAA,KAFJ;AAGIC,gBAAAA;AAHJ,eAFmB,EAOnBG,MAPmB,CAZxB;;AAAA;AAAA;AAYSG,cAAAA,IAZT,qBAYSA,IAZT;AAsBCL,cAAAA,QAAQ,CAAC;AACLC,gBAAAA,IAAI,EAAEP,qBADD;AAELY,gBAAAA,OAAO,EAAED;AAFJ,eAAD,CAAR,CAtBD,CA2BC;;AACAE,cAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAArC;AA5BD;AAAA;;AAAA;AAAA;AAAA;AA8BCL,cAAAA,QAAQ,CAAC;AACLC,gBAAAA,IAAI,EAAEN,kBADD;AAELW,gBAAAA,OAAO,EAAE,YAAIK,QAAJ,IAAgB,YAAIA,QAAJ,CAAaN,IAAb,CAAkBO;AAFtC,eAAD,CAAR;;AA9BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAoCH,CArCD;;AAuCA,SAAShB,kBAAT","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL\r\n} from '../actionTypes';\r\n\r\nconst registerUserAction = (name, email, password) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch ({\r\n                type: USER_REGISTER_REQUEST            \r\n            });\r\n    \r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n            \r\n            const { data } = await axios.post(\r\n                'api/users/register',\r\n                {\r\n                    name,\r\n                    email,\r\n                    password\r\n                }, \r\n                config\r\n            );\r\n    \r\n            dispatch({\r\n                type: USER_REGISTER_SUCCESS,\r\n                payload: data\r\n            });\r\n\r\n            // Set the user to be logged\r\n            localStorage.setItem('userAuthData', JSON.stringify(data));\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_REGISTER_FAIL,\r\n                payload: err.response && err.response.data.message\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport { registerUserAction };\r\n"]},"metadata":{},"sourceType":"module"}